// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SuperWarehouseBackend.WebApi.Db;

#nullable disable

namespace SuperWarehouseBackend.WebApi.Db.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20250807145540_RowVersion_changes")]
    partial class RowVersion_changes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SuperWarehouseBackend.WebApi.Db.Entities.InboundDocument", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<uint>("xmin")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.HasKey("Guid");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("InboundDocuments", "public");
                });

            modelBuilder.Entity("SuperWarehouseBackend.WebApi.Db.Entities.InboundResource", b =>
                {
                    b.Property<Guid>("InboundDocumentGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ResourceGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MeasureUnitGuid")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric(20, 10)");

                    b.Property<uint>("xmin")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.HasKey("InboundDocumentGuid", "ResourceGuid", "MeasureUnitGuid");

                    b.HasIndex("MeasureUnitGuid");

                    b.HasIndex("ResourceGuid");

                    b.ToTable("InboundResources", "public");
                });

            modelBuilder.Entity("SuperWarehouseBackend.WebApi.Db.Entities.MeasureUnit", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<uint>("xmin")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.HasKey("Guid");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("MeasureUnits", "public");
                });

            modelBuilder.Entity("SuperWarehouseBackend.WebApi.Db.Entities.Resource", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<uint>("xmin")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.HasKey("Guid");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Resources", "public");
                });

            modelBuilder.Entity("SuperWarehouseBackend.WebApi.Db.Entities.ResourceTotalQuantity", b =>
                {
                    b.Property<Guid>("ResourceGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MeasureUnitGuid")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric(20, 10)");

                    b.Property<uint>("xmin")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.HasKey("ResourceGuid", "MeasureUnitGuid");

                    b.HasIndex("MeasureUnitGuid");

                    b.ToTable("ResourceTotalQuantities", "public");
                });

            modelBuilder.Entity("SuperWarehouseBackend.WebApi.Db.Entities.InboundResource", b =>
                {
                    b.HasOne("SuperWarehouseBackend.WebApi.Db.Entities.InboundDocument", "InboundDocument")
                        .WithMany("InboundResources")
                        .HasForeignKey("InboundDocumentGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperWarehouseBackend.WebApi.Db.Entities.MeasureUnit", "MeasureUnit")
                        .WithMany()
                        .HasForeignKey("MeasureUnitGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperWarehouseBackend.WebApi.Db.Entities.Resource", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InboundDocument");

                    b.Navigation("MeasureUnit");

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("SuperWarehouseBackend.WebApi.Db.Entities.ResourceTotalQuantity", b =>
                {
                    b.HasOne("SuperWarehouseBackend.WebApi.Db.Entities.MeasureUnit", "MeasureUnit")
                        .WithMany()
                        .HasForeignKey("MeasureUnitGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperWarehouseBackend.WebApi.Db.Entities.Resource", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MeasureUnit");

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("SuperWarehouseBackend.WebApi.Db.Entities.InboundDocument", b =>
                {
                    b.Navigation("InboundResources");
                });
#pragma warning restore 612, 618
        }
    }
}
